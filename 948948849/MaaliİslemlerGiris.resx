<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAABvUExURfX19QAAAPv7+/j4+JmZmdvb2wQEBP7+/vPz8/r6+q2trdTU1FZWVo+Pj1hYWLCwsA4O
        DlBQUImJienp6c3NzREREcPDw+3t7ePj42tra7q6uqioqExMTEVFRXV1dRoaGiQkJJ6enjIyMjk5OYGB
        gXUGiHUAAAOPSURBVHhe7dztUtswEIVh20ocmxQIECBQPkvv/xq766jBkvNTNO7hfWYonnom4zNaryQn
        pAIAAAAAAAAAAAAAAAAAAAAAAACAqurib2mh6ft4KKm5uVwsHjvdjOG6dpufTfwPMSFcDQHbuj7XjNg/
        1a2l84T1o16hdqHaj+Des94ghu7HMHh7bb0L8YQMC5gk3KolDBYwsdZKGCor0c8RNJv7eErDME2MS7St
        X1bxnIirUb4h6+tNPCNhWqL1Zq00HYbuIuYaeNbNWms2TAIONbqWugltmshKVCvg38V25F20lirRdC1q
        1AL6NOGhDlqxJuOL7TG7H9UCXiQDaFqtEvXFdpZwKdVF+7TJ+JShVaIWMBtAmweFnpeGLpsHzbKXeiAs
        3kUr76LjGlUMONJaWLFpYlqiYku1fjoPam2X0sW23m7CSzQZQLkm4/dgWqK360ZnHuyy3YR3UbUNb7ab
        0AoYusoX258JhzlfqYt2oX/aR4uGgFolOtlNiK1ksrfP7LCVerKdP/i1hButlcx0N6F2D6bzoP+jVaLZ
        Iws/1hrBYAHHCb3JyHXRlK1F47l/7Gs+HJDu6N3bctWcRN80trQqzgKmJVo/vC9O5X0bCne4rIvOwK+7
        sndIk6xkZsAu5rFkxOZ8ZgEHy3h1JdzH15yXl3KD2N/F15yX13h5BfRnM6xRu6JyHynrL+Orzky5ObFf
        x5ecl+dyU2Jo3vIV6an51bwXnPSb7Qxni4+iy9PV/O7Ej8Kfe1yd2SjOaBg/Fl3pDcYQMb589LJbnsqu
        +oKHQ820UM9X4VTiRZXlo5gN47nWG4ZDuxkntONrtYg+iiOiEbN2Y/diPKkhj2jHan+flrcbwYhHJ414
        TkM40m60InbH5kX1jmrHYhFDkxWqkWs3Poppodq9KDUx5qMo124mk4YPqOQyPC1U+WV4qx5RslA9YtZR
        BZfh44TfYBQFI/qkkdapRdTbEo9ZXMmOmg6j4r04KdR4TsNkp+HtRvzZjZGcNEZ8FNUiZjsN+5F8sJEW
        qmTEmM19g0L1iHTU/82RQl2ojWJaqB7xTmsVfmSnIfede3mh1nrfuZe1G8Hv3JsUqth37pnszbdW6zv3
        3P7Nt2EB5z8PYjPi3uFDKW29kfrOvYNwmBdvt1p/mfipXz7YIL79vlENaBFX97td18j10ZEv+3AdAAAA
        AAAAAAAAAAAAAAAAAAAAAHVV9Qfe5CmMGqHHfwAAAABJRU5ErkJggg==
</value>
  </data>
</root>